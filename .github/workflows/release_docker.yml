name: Release Docker

on:
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: "Default version to use when preparing a release."
        required: true
        default: "X.Y.Z"
jobs:
  release-docker:
    name: Docker release
    runs-on: 'ubuntu-latest'
    steps:
      - name: Print github context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive
      # see https://github.com/docker/build-push-action/blob/master/docs/advanced/tags-labels.md
      - name: Docker meta (default)
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ github.repository }}
            ghcr.io/${{ github.repository }}/${{ github.event.repository.name }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=${{ github.event.inputs.releaseVersion }}
      - name: Docker meta (alpine)
        id: meta_alpine
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ github.repository }}
            ghcr.io/${{ github.repository }}/${{ github.event.repository.name }}
          tags: |
            type=raw,value=alpine,enable={{is_default_branch}}
            type=raw,value=${{ github.event.inputs.releaseVersion }}-alpine
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push image (default)
        uses: docker/build-push-action@v2
        #        env:
        #          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        #          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        #        if: ${{ env.DOCKER_PASSWORD!='' && env.DOCKER_USERNAME!=''}}
        #        continue-on-error: true
        with:
          context: ./opendj-packages/opendj-docker
          file: ./opendj-packages/opendj-docker/Dockerfile
          build-args: |
            VERSION=${{ github.event.inputs.releaseVersion }}
          platforms: linux/amd64,linux/arm64/8
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Build and push image (alpine)
        uses: docker/build-push-action@v2
        #        env:
        #          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        #          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        #        if: ${{ env.DOCKER_PASSWORD!='' && env.DOCKER_USERNAME!=''}}
        #        continue-on-error: true
        with:
          context: ./opendj-packages/opendj-docker
          file: ./opendj-packages/opendj-docker/Dockerfile-alpine
          build-args: |
            VERSION=${{ github.event.inputs.releaseVersion }}
          platforms: linux/amd64,linux/arm64/8
          push: false
          tags: ${{ steps.meta_alpine.outputs.tags }}
          labels: ${{ steps.meta_alpine.outputs.labels }}
